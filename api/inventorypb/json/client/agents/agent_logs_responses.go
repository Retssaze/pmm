// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AgentLogsReader is a Reader for the AgentLogs structure.
type AgentLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAgentLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentLogsOK creates a AgentLogsOK with default headers values
func NewAgentLogsOK() *AgentLogsOK {
	return &AgentLogsOK{}
}

/* AgentLogsOK describes a response with status code 200, with default header values.

A successful response.
*/
type AgentLogsOK struct {
	Payload *AgentLogsOKBody
}

func (o *AgentLogsOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/Logs][%d] agentLogsOk  %+v", 200, o.Payload)
}

func (o *AgentLogsOK) GetPayload() *AgentLogsOKBody {
	return o.Payload
}

func (o *AgentLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(AgentLogsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentLogsDefault creates a AgentLogsDefault with default headers values
func NewAgentLogsDefault(code int) *AgentLogsDefault {
	return &AgentLogsDefault{
		_statusCode: code,
	}
}

/* AgentLogsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AgentLogsDefault struct {
	_statusCode int

	Payload *AgentLogsDefaultBody
}

// Code gets the status code for the agent logs default response
func (o *AgentLogsDefault) Code() int {
	return o._statusCode
}

func (o *AgentLogsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/Logs][%d] AgentLogs default  %+v", o._statusCode, o.Payload)
}

func (o *AgentLogsDefault) GetPayload() *AgentLogsDefaultBody {
	return o.Payload
}

func (o *AgentLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(AgentLogsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AgentLogsBody agent logs body
swagger:model AgentLogsBody
*/
type AgentLogsBody struct {
	// agent ID
	AgentID string `json:"agentID,omitempty"`
}

// Validate validates this agent logs body
func (o *AgentLogsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this agent logs body based on context it is used
func (o *AgentLogsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentLogsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLogsBody) UnmarshalBinary(b []byte) error {
	var res AgentLogsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentLogsDefaultBody agent logs default body
swagger:model AgentLogsDefaultBody
*/
type AgentLogsDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*AgentLogsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this agent logs default body
func (o *AgentLogsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentLogsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AgentLogs default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AgentLogs default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this agent logs default body based on the context it is used
func (o *AgentLogsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentLogsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AgentLogs default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AgentLogs default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentLogsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLogsDefaultBody) UnmarshalBinary(b []byte) error {
	var res AgentLogsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentLogsDefaultBodyDetailsItems0 agent logs default body details items0
swagger:model AgentLogsDefaultBodyDetailsItems0
*/
type AgentLogsDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this agent logs default body details items0
func (o *AgentLogsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this agent logs default body details items0 based on context it is used
func (o *AgentLogsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentLogsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLogsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res AgentLogsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentLogsOKBody agent logs OK body
swagger:model AgentLogsOKBody
*/
type AgentLogsOKBody struct {
	// logs
	Logs string `json:"logs,omitempty"`
}

// Validate validates this agent logs OK body
func (o *AgentLogsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this agent logs OK body based on context it is used
func (o *AgentLogsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentLogsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLogsOKBody) UnmarshalBinary(b []byte) error {
	var res AgentLogsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
